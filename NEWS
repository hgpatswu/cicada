2011-8-x
Added ngram OOV feature which greatly improve translation quality (and that is found in cdec)
Allow output both of lattice and forest (may potentially be extended to output bitext/alignment/spans etc....?)
Serious bugfix for feature-vector comparison, which may affect epsilon-removal of lattice (this affect experiments after "compact-feature-vector")
Faster Cube Pruning for GHKM rule extractions

2011-7-28
Implemented Algorihm 2 of Faster Cube Pruning which completely eliminates parent book-keeping
Added more human-loop-unrolling in hmm code
Added convex-hull computer, which will answer a question, "If this feature scaling were set to ..., your BLEU were ...%."
Bugfix for minimum alignment constraint: when checking with more non-terminals, it was too-constrained
Differentiated max-span for source/target and min-hole for source/target
   I'm not sure whether it is worthwhile to completely simulate Hiero-rules. At least, I can say that there's small difference.

2011-7-12
Better caching for sparse-{lexicon,ngram},rule-shape features
Removed human-unrolling (for potential bug?)

2011-7-11
INCOMPATIBLE CHANGE: use EPSILON instead of NONE at many places... 
  This will affect cicada-extract.py and cicada-alignment.py since they requres NULL word representations
  NONE will be used only for the boundary condition in tree-grammar indexing
Added spearse-lexicon and sparse-ngram features to reproduce Watanabe et al. (2007)
Bugfix for reading features in kbest: if "=" appears in a feature name, we cannot parse!

2011-7-7
Added lexicon learning by HMM/Model1 + a script to perform bidirectional alignment combination
Added alignment constrained learning in HMM/Model1
Added online learning (MIRA/CW/AROW) for kbest-based learner

2011-6-30
Bugfix for kbest oracle for taking unique
Bugfix for oracle computer memorize the best-so-forth results, instead of the previously best
Revised cicada_learn{,_kbest}{,_mpi} so that the constant hyperparameter is independent of the training data size
Evaluator can take directory input
Evaluator can assign an individual score to each sentence with base document.
Compact memory consumption in parse-{cky,tree,tree-cky}

2011-6-27
Serious bugfix for parse-{cky,tree,tree-cky} where the features from source lattice/forest(s) are completely ignored for pruning.
Added format, a formatter/parser derived from ICU's number/date format/parse
Added grammar-format, grammar using the ICU's number/date formatter/parser as our rule!
Added experimental kbest-based learner/mert/oracle computer with support for liblinear solver
Support multiple forest loading in cicada_learn_mpi and added an option to load previously training parameters
Support margin-based learning in cicada_learn_mpi

2011-6-6
Reimplemented scorer for extracted counts.
   Previously we store all the target side counts in a DB, but now we use re-sort based implementation
   found in moses script, though it requires extra storage.
Tweaked parameters for grammar-static and tree-grammar-static for large data indexing.

2011-6-1
Bugfix for mpi version of extract-score. Instead of pushing into stream, wait: We assume that send-buffer is large enough for better map-reduce

2011-5-30
Serious bugfix for {compose,parse}-{tree,tree-cky}: internal rules are not correctly computed
Serious bugfix for sentence input in cicada and cicada_mpi: by default, we will read in sentence-mode, instead of previous "lattice" then fallback to "sentence"
Added --input-sentence option to explicitly control the behavior
Added --multiple option for cicada_unite_*
Added --constrained option for constraining the # of nodes/height of minimal rules in GHKM extraction
Added skip-sgml-tag in ngram/bleu/bleu-linear feature and mt evals, such as bleu, wer etc. But this will no skip <s> </s>
Less memory consumption in scfg/ghkm/tree extraction by frequently checking memory usage (+ slightly slower)
Less memory consumption in parse-coarse
Better feature-vector implementation with smaller storage
Faster(?) parse-{cky,tree,tree-cky} by pre-pruning rules if exceeding pop limits.
Removed "dot" and use separate "dot_product" in dot_product.hpp
Binarize-all now shares binarized nodes in a forest

2011-5-18
Serious bugfix for generate-earley. We will now check the depth of all the passive/active edges to be extended.

2011-5-17
Serious bugfix for simple vector, wrt resize/insert/erase, which affect feature-vectors.

2011-5-16
Bugfix for spurious memory allocation in compose-cky, parse-cky and parse-coarse
Bugfix for topological sort after compose-tree and parse-tree
Better memory management in compose/parse operations

2011-5-9
Added a sample grammar file to support zone/wall found in moses.
Added experimental compose-tree-cky and parse-tree-cky for string-to-tree translation!
Support cky-style indexing in tree-transducer for string-to-tree translation.
Better global lexicon learning by limiting the source word features
More compact representation for feature vectors
Bugfix: use base10 -99 for Pr(<s>)

2011-4-22
Added push-bos-eos which annotates forests with <s> </s>. Use with no-bos-eos options for ngram/variational features.
Added prune-edge which prunes forests wrt # of edges for each node.
Added parse-tree which is an approximated beam variant of compose-tree
Randomize hill-climbing for oracle computation.
Incompatible change: word-penalty feature do not count <s> </s> as a "word"
Bugfix: when assigned weights or weights-one, do not perform "assign"
Bugfix: prune-kbest will not "prune" when we cannot generate suffixient # of kbests.

2011-4-18
Added coarse-to-fine parsing
Added coarse grammar learning
Added epsilon-removal for hypergraph
Added no-bos-eos option to ngram feature which will not score via <s> </s>, assuming <s> and </s> are used in grammar
Reworked attribute vector for smaller memory allocation (but slower for insert/erase)
Use -99 for unigram probability of <s> taken from SRILM

2011-3-28
New grammar API: use --grammar and/or --tree-grammar only, and removed options, such as --grammar-static etc.
Added parser component. Currently, we support tabular-CKY and bottom-up agenda-based best-first search with pruning.
Added parseval evaluator.
Added grammar learner based on latent annotation grammar
Better scanner/generator for hypergraph/lattice structures etc. by eliminating (potentially slower) symbol-tables.

2011-2-14
Better vocabulary management by eliminating temporary buffer
Use boost.spirit for parsing/generating numerics

2011-1-17
Support tree-to-string translation (probably, the code will work for tree-to-tree)
Added sort-tail operation which sort tails by its order in rule's non-terminal index.
Added lexicon learning (dice and model1 via cicada_lexicon_{dice,model1}) and lexicon model learning from word alignment (cicada_lexicon)
Added word-cluster learning (cicada_cluster_word)
Added filter for forest-charniak and egret (cicada_filter_charniak) and CONLL-X (cicada_filter_conll)
Added moses compatible phrase/synchronous-CFG rule/GHKM rule/tree2tree rule extraction script (cicada-extract.py)
Added string-to-tree GHKM extraction by flipping source/target side in tree-to-string extraction

2010-12-22
Added new API for mt-evaluation score allowing ascii-dumping by desciption/encode and recovery by decode.
GHKM and Tree extractor first computes terminal span, and removed span-forest from cicada_fitler_{penntreebank,cabocha}

2010-12-20
Serious bugfix to ngram-related features with double counting.
Serious bugfix to expected ngram collections
Added preliminary head-finder
Added approximate matcher to cicada_unite_sentence and TER/WER

2010-12-13
Added phrase-extract-like script, extract.py, for easily extracting/scoreing phrase/scfg/ghkm.
Added alignment tool, cicada_alignment (do we need this?) (TODO: add ITG alignment + threading)
Added matching API, word matcher using lower-case, stemming and wordnet synsets(!) (TODO: use this for TER etc.)
Added wordnet API (we use the standard c-interface wrapped by thread-safe API)
Modified "permute" so that permutation rules are stored in attributes and permute-feature can access and perform scoring.

2010-11-28
Added "attribute" in each hyperedge which can store key-value pair with arbitray value type: 64-bit-int, double float or string.
Cache rule allocation in hypergraph for better memory consumption

2010-11-22
Support tree transduction (but experimental)
Removed bi-rules in hypergraph: removed "yield" in features etc. but added in compositional operations.
Added phrase/synchronous-rule/GHKM-rule extractor + score accumulator
Added tokenizer, and use it for MT evaluators and bleu-related features
Added new API for word normalizer (stemmer or cluster) and use it for sparce features
Added remove-epsilon for lattice
Added linguistic stemmer (snowball and LDC's Arabic stemmer)

2010-10-31
Support phrase-based composition with length-based distortion
and lexicalized-reordering (experimental, and only for monotonic lattice)

2010-10-23
Added ter/wer/per
Added cicada_unite_{hypergraph,lattice,sentence} to perform merging
Added Earley generator with contextual category
Support epsilon in lattice

2010-9-6
Added expected-ngram computer
Added expected-BLEU feature
Added ngram-count-set structure
Moved operation/operation_set into global

2010-8-27
Added cube-growing with order-based coarse heuristic

"Quietly" revised grammar-static structure

2010-8-26
Implemented cube-pruning and cube-growing for faster rescoring


